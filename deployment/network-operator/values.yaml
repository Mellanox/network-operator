# Copyright 2020 NVIDIA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for network-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nfd:
  enabled: true

sriovNetworkOperator:
  enabled: false

# Node Feature discovery chart related values
node-feature-discovery:
  image:
    pullPolicy: IfNotPresent
  master:
    instance: "nvidia.networking"
  worker:
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        value: ""
        effect: "NoSchedule"
      - key: "nvidia.com/gpu"
        operator: "Equal"
        value: "present"
        effect: "NoSchedule"
    config: |
      sources:
          pci:
            deviceClassWhitelist:
              - "02"
              - "0200"
              - "0207"
            deviceLabelFields:
              - vendor


# General Operator related values
# The operator element allows to deploy network operator from an alternate location
operator:
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Equal"
      value: ""
      effect: "NoSchedule"
  nodeSelector: {}
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: In
                values: [""]
  repository: mellanox
  image: network-operator
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  # tag, if defined will use the given image tag, else Chart.AppVersion will be used
  # tag

proxy:
  httpProxy: ""
  httpsProxy: ""
  noProxy: ""

# NicClusterPolicy CR values:
deployCR: false
ofedDriver:
  deploy: false
  image: mofed
  repository: mellanox
  version: 5.4-1.0.3.0
  imagePullSecrets: []
  startupProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 30

nvPeerDriver:
  deploy: false
  image: nv-peer-mem-driver
  repository: mellanox
  version: 1.1-0
  imagePullSecrets: []
  gpuDriverSourcePath: /run/nvidia/driver

rdmaSharedDevicePlugin:
  deploy: true
  image: k8s-rdma-shared-dev-plugin
  repository: mellanox
  version: v1.1.0
  imagePullSecrets: []
  # The following defines the RDMA resources in the cluster
  # it must be provided by the user when deploying the chart
  # each entry in the resources element will create a resource with the provided <name> and list of devices
  # example:
  resources:
    - name: rdma_shared_device_a
      vendors: [15b3]

sriovDevicePlugin:
  deploy: true
  image: sriov-device-plugin
  repository: docker.io/nfvpe
  version: v3.3
  imagePullSecrets: []
  resources:
    - name: hostdev
      vendors: [15b3]

secondaryNetwork:
  deploy: true
  cniPlugins:
    deploy: true
    image: containernetworking-plugins
    repository: mellanox
    version: v0.8.7
    imagePullSecrets: []
  multus:
    deploy: true
    image: multus
    repository: nfvpe
    version: v3.6
    imagePullSecrets: []
    config: ''
  ipamPlugin:
    deploy: true
    image: whereabouts
    repository: mellanox
    version: v0.3
    imagePullSecrets: []

test:
  pf: ens2f0
