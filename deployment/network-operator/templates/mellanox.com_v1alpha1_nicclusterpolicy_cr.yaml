{{/*
  Copyright 2020 NVIDIA

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/}}
{{- if .Values.deployCR }}
apiVersion: mellanox.com/v1alpha1
kind: NicClusterPolicy
metadata:
  name: nic-cluster-policy
spec:
  {{- if .Values.nodeAffinity }}
  nodeAffinity:
{{ toYaml .Values.nodeAffinity | indent 4 }}
  {{- end }}
  {{- if .Values.tolerations }}
  tolerations:
{{ toYaml .Values.tolerations | indent 4 }}
  {{- end }}
  {{- if .Values.ofedDriver.deploy }}
  ofedDriver:
    image: {{ .Values.ofedDriver.image }}
    repository: {{ .Values.ofedDriver.repository }}
    version: {{ .Values.ofedDriver.version }}
    {{- if .Values.ofedDriver.env }}
    env:
      {{ toYaml .Values.ofedDriver.env | nindent 6 }}
    {{- end }}
    {{- if .Values.ofedDriver.certConfig.name }}
    certConfig:
      name: {{ .Values.ofedDriver.certConfig.name }}
    {{- end }}
    {{- if .Values.ofedDriver.repoConfig.name }}
    repoConfig:
      name: {{ .Values.ofedDriver.repoConfig.name }}
    {{- end }}
    imagePullSecrets: {{ include "network-operator.ofed.imagePullSecrets" . }}
    terminationGracePeriodSeconds: {{ .Values.ofedDriver.terminationGracePeriodSeconds }}
    startupProbe:
      initialDelaySeconds: {{ .Values.ofedDriver.startupProbe.initialDelaySeconds }}
      periodSeconds: {{ .Values.ofedDriver.startupProbe.periodSeconds }}
    livenessProbe:
      initialDelaySeconds: {{ .Values.ofedDriver.livenessProbe.initialDelaySeconds }}
      periodSeconds: {{ .Values.ofedDriver.livenessProbe.periodSeconds }}
    readinessProbe:
      initialDelaySeconds: {{ .Values.ofedDriver.readinessProbe.initialDelaySeconds }}
      periodSeconds: {{ .Values.ofedDriver.readinessProbe.periodSeconds }}
    {{- if .Values.ofedDriver.upgradePolicy }}
    upgradePolicy:
      autoUpgrade: {{ .Values.ofedDriver.upgradePolicy.autoUpgrade | default false }}
      maxParallelUpgrades: {{ .Values.ofedDriver.upgradePolicy.maxParallelUpgrades | default 0 }}
      drain:
        enable: {{ .Values.ofedDriver.upgradePolicy.drain.enable | default true }}
        force: {{ .Values.ofedDriver.upgradePolicy.drain.force | default false }}
        podSelector: {{ .Values.ofedDriver.upgradePolicy.drain.podSelector | quote }}
        timeoutSeconds: {{ .Values.ofedDriver.upgradePolicy.drain.timeoutSeconds }}
        deleteEmptyDir: {{ .Values.ofedDriver.upgradePolicy.drain.deleteEmptyDir | default false}}
    {{- end }}
  {{- end }}
  {{- if .Values.rdmaSharedDevicePlugin.deploy }}
  rdmaSharedDevicePlugin:
    # {{ required "A valid value for .Values.rdmaSharedDevicePlugin.resources is required" .Values.rdmaSharedDevicePlugin.resources }}
    image: {{ .Values.rdmaSharedDevicePlugin.image }}
    repository: {{ .Values.rdmaSharedDevicePlugin.repository }}
    version: {{ .Values.rdmaSharedDevicePlugin.version }}
    imagePullSecrets: {{ include "network-operator.rdmaSharedDevicePlugin.imagePullSecrets" . }}
    # The config below directly propagates to k8s-rdma-shared-device-plugin configuration.
    # Replace 'devices' with your (RDMA capable) netdevice name.
    config: |
      {
        "configList": [
          {{- $length := len .Values.rdmaSharedDevicePlugin.resources }}
          {{- range $index, $element := .Values.rdmaSharedDevicePlugin.resources }}
          {
            "resourceName": {{ $element.name | quote }},
            "rdmaHcaMax": {{ $element.rdmaHcaMax | default 63 }},
            "selectors": {
              "vendors": {{ $element.vendors | default list | toJson }},
              "deviceIDs": {{ $element.deviceIDs | default list | toJson }},
              "drivers": {{ $element.drivers | default list | toJson }},
              "ifNames": {{ $element.ifNames | default list | toJson }},
              "linkTypes": {{ $element.linkTypes | default list | toJson }}
            }
          } {{- if ne $length (add1 $index) }},{{ end }}
          {{- end }}
        ]
      }
  {{- end }}
  {{- if .Values.sriovDevicePlugin.deploy }}
  sriovDevicePlugin:
    image: {{ .Values.sriovDevicePlugin.image }}
    repository: {{ .Values.sriovDevicePlugin.repository }}
    version: {{ .Values.sriovDevicePlugin.version }}
    imagePullSecrets: {{ include "network-operator.sriovDevicePlugin.imagePullSecrets" . }}
    config: |
      {
        "resourceList": [
          {{- $length := len .Values.sriovDevicePlugin.resources }}
          {{- range $index, $element := .Values.sriovDevicePlugin.resources }}
          {
            "resourcePrefix": "nvidia.com",
            "resourceName": {{ $element.name | quote }},
            "selectors": {
              "vendors": {{ $element.vendors | default list | toJson }},
              "devices": {{ $element.devices | default list | toJson }},
              "drivers": {{ $element.drivers | default list | toJson }},
              "pfNames": {{ $element.pfNames | default list | toJson }},
              "pciAddresses": {{ $element.pciAddresses | default list | toJson }},
              "rootDevices": {{ $element.rootDevices | default list | toJson }},
              "linkTypes": {{ $element.linkTypes | default list | toJson }},
              "isRdma": true
            }
          } {{- if ne $length (add1 $index) }},{{ end }}
          {{- end }}
        ]
      }
  {{- end }}
  {{- if .Values.ibKubernetes.deploy }}
  ibKubernetes:
    image: {{ .Values.ibKubernetes.image }}
    repository: {{ .Values.ibKubernetes.repository }}
    version: {{ .Values.ibKubernetes.version }}
    imagePullSecrets: {{ include "network-operator.ibKubernetes.imagePullSecrets" . }}
    pKeyGUIDPoolRangeStart: {{ .Values.ibKubernetes.pKeyGUIDPoolRangeStart }}
    pKeyGUIDPoolRangeEnd: {{ .Values.ibKubernetes.pKeyGUIDPoolRangeEnd }}
    ufmSecret: {{ .Values.ibKubernetes.ufmSecret | quote }}
  {{- end }}
  {{- if .Values.secondaryNetwork.deploy }}
  secondaryNetwork:
    {{- if .Values.secondaryNetwork.cniPlugins.deploy }}
    cniPlugins:
      image: {{ .Values.secondaryNetwork.cniPlugins.image }}
      repository: {{ .Values.secondaryNetwork.cniPlugins.repository }}
      version: {{ .Values.secondaryNetwork.cniPlugins.version }}
      imagePullSecrets: {{ include "network-operator.secondaryNetwork.cniPlugins.imagePullSecrets" . }}
    {{- end }}
    {{- if .Values.secondaryNetwork.multus.deploy }}
    multus:
      image: {{ .Values.secondaryNetwork.multus.image }}
      repository: {{ .Values.secondaryNetwork.multus.repository }}
      version: {{ .Values.secondaryNetwork.multus.version }}
      imagePullSecrets: {{ include "network-operator.secondaryNetwork.multus.imagePullSecrets" . }}
      {{- if .Values.secondaryNetwork.multus.config | empty | not }}
      config: {{ .Values.secondaryNetwork.multus.config | quote }}
      {{- end }}
    {{- end }}
    {{- if .Values.secondaryNetwork.ipoib.deploy }}
    ipoib:
      image: {{ .Values.secondaryNetwork.ipoib.image }}
      repository: {{ .Values.secondaryNetwork.ipoib.repository }}
      version: {{ .Values.secondaryNetwork.ipoib.version }}
    {{- end }}
    {{- if .Values.secondaryNetwork.ipamPlugin.deploy }}
    ipamPlugin:
      image: {{ .Values.secondaryNetwork.ipamPlugin.image }}
      repository: {{ .Values.secondaryNetwork.ipamPlugin.repository }}
      version: {{ .Values.secondaryNetwork.ipamPlugin.version }}
      imagePullSecrets: {{ include "network-operator.secondaryNetwork.ipamPlugin.imagePullSecrets" . }}
    {{- end }}
  {{- end }}
  psp:
    enabled: {{ .Values.psp.enabled }}
  {{- if .Values.nvIpam.deploy }}
  nvIpam:
    image: {{ .Values.nvIpam.image }}
    repository: {{ .Values.nvIpam.repository }}
    version: {{ .Values.nvIpam.version }}
    imagePullSecrets: {{ include "network-operator.nvIpam.imagePullSecrets" . }}
    {{- if .Values.nvIpam.config | empty | not }}
    config: {{ .Values.nvIpam.config | quote }}
    {{- end }}
  {{- end }}
{{ end }}
