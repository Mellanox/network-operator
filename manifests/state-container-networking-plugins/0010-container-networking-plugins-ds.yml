# Copyright 2020 NVIDIA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cni-plugins-ds
  namespace: {{ .RuntimeSpec.Namespace }}
  labels:
    tier: node
    app: cni-plugins
spec:
  selector:
    matchLabels:
      name: cni-plugins
  template:
    metadata:
      labels:
        name: cni-plugins
        tier: node
        app: cni-plugins
    spec:
      hostNetwork: true
      {{- if .CrSpec.ImagePullSecrets }}
      imagePullSecrets:
      {{- range .CrSpec.ImagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .NodeAffinity }}
      affinity:
        nodeAffinity:
          {{- .NodeAffinity | yaml | nindent 10 }}
      {{- end }}
      tolerations:
        {{- if .Tolerations }}
        {{- .Tolerations | yaml | nindent 8 }}
        {{- end }}
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
      containers:
        - name: cni-plugins
          image: {{ imagePath .CrSpec.Repository .CrSpec.Image .CrSpec.Version }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          {{- with .RuntimeSpec.ContainerResources }}
          {{- with index . "cni-plugins" }}
          resources:
            {{- if .Requests }}
            requests:
              {{ .Requests | yaml | nindent 14}}
            {{- end }}
            {{- if .Limits }}
            limits:
              {{ .Limits | yaml | nindent 14}}
            {{- end }}
          {{- end }}
          {{- else }}
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "100m"
              memory: "50Mi"
          {{- end }}
          volumeMounts:
            - name: cnibin
              mountPath: /host/opt/cni/bin
      volumes:
        - name: cnibin
          hostPath:
            path: {{ .RuntimeSpec.CniBinDirectory }}
