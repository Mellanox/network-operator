# 2023 NVIDIA CORPORATION & AFFILIATES
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nv-ipam-controller
  namespace: {{ .RuntimeSpec.Namespace }}
  annotations:
    kubernetes.io/description: |
      This deployment launches the nv-ipam controller for nv-ipam.
  labels:
    component: nv-ipam-controller
    app: nv-ipam
    name: nv-ipam-controller
spec:
  strategy:
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
      name: nv-ipam-controller
  template:
    metadata:
      labels:
        component: nv-ipam-controller
        app: nv-ipam
        name: nv-ipam-controller
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: nv-ipam-controller
      affinity:
        podAntiAffinity:
          # use preferred(instead of required) here to support deployment to the singe node cluster
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - nv-ipam-controller
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                      - ""
          - weight: 1
            preference:
              matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: In
                  values:
                    - ""
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      {{- if .CrSpec.ImagePullSecrets }}
      imagePullSecrets:
      {{- range .CrSpec.ImagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: nv-ipam-controller
          image: {{ imagePath .CrSpec.Repository .CrSpec.Image .CrSpec.Version }}
          imagePullPolicy: IfNotPresent
          command: ["/ipam-controller"]
          args:
            - --leader-elect=true
            - --leader-elect-namespace=$(POD_NAMESPACE)
            - --ippools-namespace=$(POD_NAMESPACE)
            {{- if .CrSpec.EnableWebhook }}
            - --webhook=true
            {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .RuntimeSpec.ContainerResources }}
          {{- with index . "nv-ipam-controller" }}
          resources:
            {{- if .Requests }}
            requests:
              {{ .Requests | yaml | nindent 14}}
            {{- end }}
            {{- if .Limits }}
            limits:
              {{ .Limits | yaml | nindent 14}}
            {{- end }}
          {{- end }}
          {{- else }}
          resources:
            requests:
              cpu: "100m"
              memory: "300Mi"
          {{- end }}
          volumeMounts:
          {{- if .CrSpec.EnableWebhook }}
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- end }}
      volumes:
        {{- if .CrSpec.EnableWebhook }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: nv-ipam-webhook-server-cert
        {{- end }}
---
