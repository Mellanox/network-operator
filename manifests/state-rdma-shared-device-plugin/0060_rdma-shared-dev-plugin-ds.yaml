# Copyright 2020 NVIDIA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: rdma-shared-dp-ds
  namespace: {{ .RuntimeSpec.Namespace }}
spec:
  selector:
    matchLabels:
      app: rdma-shared-dp
  template:
    metadata:
      labels:
        app: rdma-shared-dp
    spec:
      priorityClassName: system-node-critical
      hostNetwork: true
{{ if .RuntimeSpec.IsOpenshift }}
      serviceAccountName: rdma-shared
{{end}}
      tolerations:
        {{- if .Tolerations }}
        {{- .Tolerations | yaml | nindent 8 }}
        {{- end }}
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
{{if .DeployInitContainer}}
      initContainers:
        - name: ofed-driver-validation
          image: {{ imagePath .CrSpec.Repository .CrSpec.Image .CrSpec.Version }}
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c' ]
          args: [ "until lsmod | grep mlx5_core; do echo waiting for OFED drivers to be loaded; sleep 30; done" ]
{{end}}
      {{- if .CrSpec.ImagePullSecrets }}
      imagePullSecrets:
      {{- range .CrSpec.ImagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
      - image: {{ imagePath .CrSpec.Repository .CrSpec.Image .CrSpec.Version }}
        name: rdma-shared-dp
        command: [ "/bin/k8s-rdma-shared-dp" ]
        {{- if .CrSpec.UseCdi }}
        args: [ "--use-cdi" ]
        {{- end }}
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
            readOnly: false
          - name: plugins-registry
            mountPath: /var/lib/kubelet/plugins_registry
            readOnly: false
          - name: config
            mountPath: /k8s-rdma-shared-dev-plugin
          - name: devs
            mountPath: /dev/
          {{- if .CrSpec.UseCdi }}
          - name: dynamic-cdi
            mountPath: /var/run/cdi
          - name: host-config-volume
            mountPath: /host/etc/pcidp/
          {{- end }}
        {{- with .RuntimeSpec.ContainerResources }}
        {{- with index . "rdma-shared-dp" }}
        resources:
          {{- if .Requests }}
          requests:
            {{ .Requests | yaml | nindent 12}}
          {{- end }}
          {{- if .Limits }}
          limits:
            {{ .Limits | yaml | nindent 12}}
          {{- end }}
        {{- end }}
        {{- end }}
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: plugins-registry
          hostPath:
            path: /var/lib/kubelet/plugins_registry
        - name: config
          configMap:
            name: rdma-devices
            items:
            - key: config.json
              path: config.json
        - name: devs
          hostPath:
            path: /dev/
        {{- if .CrSpec.UseCdi }}
        - name: dynamic-cdi
          hostPath:
            path: /var/run/cdi
            type: DirectoryOrCreate
        - name: host-config-volume
          hostPath:
            path: /etc/pcidp
            type: DirectoryOrCreate
        {{- end }}
      nodeSelector:
        feature.node.kubernetes.io/pci-15b3.present: "true"
        network.nvidia.com/operator.mofed.wait: "false"
      {{- if .NodeAffinity }}
      affinity:
        nodeAffinity:
          {{- .NodeAffinity | yaml | nindent 10 }}
      {{- end }}
