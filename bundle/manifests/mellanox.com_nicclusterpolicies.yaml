apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: nicclusterpolicies.mellanox.com
spec:
  group: mellanox.com
  names:
    kind: NicClusterPolicy
    listKind: NicClusterPolicyList
    plural: nicclusterpolicies
    singular: nicclusterpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NicClusterPolicy is the Schema for the nicclusterpolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NicClusterPolicySpec defines the desired state of NicClusterPolicy
            properties:
              ibKubernetes:
                description: IBKubernetesSpec describes configuration options for
                  ib-kubernetes
                properties:
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  pKeyGUIDPoolRangeEnd:
                    description: The last guid in the pool
                    type: string
                  pKeyGUIDPoolRangeStart:
                    description: The first guid in the pool
                    type: string
                  periodicUpdateSeconds:
                    default: 5
                    description: Interval of updates in seconds
                    minimum: 0
                    type: integer
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  ufmSecret:
                    description: Secret containing credentials to UFM service
                    type: string
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              nicFeatureDiscovery:
                description: NicFeatureDiscoverySpec describes configuration options
                  for nic-feature-discovery
                properties:
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              nodeAffinity:
                description: Node affinity is a group of node affinity scheduling
                  rules.
                properties:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    description: The scheduler will prefer to schedule pods to nodes
                      that satisfy the affinity expressions specified by this field,
                      but it may choose a node that violates one or more of the expressions.
                      The node that is most preferred is the one with the greatest
                      sum of weights, i.e. for each node that meets all of the scheduling
                      requirements (resource request, requiredDuringScheduling affinity
                      expressions, etc.), compute a sum by iterating through the elements
                      of this field and adding "weight" to the sum if the node matches
                      the corresponding matchExpressions; the node(s) with the highest
                      sum are the most preferred.
                    items:
                      description: An empty preferred scheduling term matches all
                        objects with implicit weight 0 (i.e. it's a no-op). A null
                        preferred scheduling term matches no objects (i.e. is also
                        a no-op).
                      properties:
                        preference:
                          description: A node selector term, associated with the corresponding
                            weight.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                          type: object
                          x-kubernetes-map-type: atomic
                        weight:
                          description: Weight associated with matching the corresponding
                            nodeSelectorTerm, in the range 1-100.
                          format: int32
                          type: integer
                      required:
                      - preference
                      - weight
                      type: object
                    type: array
                  requiredDuringSchedulingIgnoredDuringExecution:
                    description: If the affinity requirements specified by this field
                      are not met at scheduling time, the pod will not be scheduled
                      onto the node. If the affinity requirements specified by this
                      field cease to be met at some point during pod execution (e.g.
                      due to an update), the system may or may not try to eventually
                      evict the pod from its node.
                    properties:
                      nodeSelectorTerms:
                        description: Required. A list of node selector terms. The
                          terms are ORed.
                        items:
                          description: A null or empty node selector term matches
                            no objects. The requirements of them are ANDed. The TopologySelectorTerm
                            type implements a subset of the NodeSelectorTerm.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                    required:
                    - nodeSelectorTerms
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              nvIpam:
                description: NVIPAMSpec describes configuration options for nv-ipam
                  1. Image information for nv-ipam 2. Configuration for nv-ipam
                properties:
                  config:
                    type: string
                  enableWebhook:
                    default: false
                    description: Enable deployment of the validation webhook
                    type: boolean
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              ofedDriver:
                description: OFEDDriverSpec describes configuration options for OFED
                  driver
                properties:
                  certConfig:
                    description: 'Optional: Custom TLS certificates configuration
                      for driver container'
                    properties:
                      name:
                        type: string
                    type: object
                  env:
                    description: List of environment variables to set in the OFED
                      container.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  livenessProbe:
                    description: Pod liveness probe settings
                    properties:
                      initialDelaySeconds:
                        type: integer
                      periodSeconds:
                        type: integer
                    required:
                    - initialDelaySeconds
                    - periodSeconds
                    type: object
                  readinessProbe:
                    description: Pod readiness probe settings
                    properties:
                      initialDelaySeconds:
                        type: integer
                      periodSeconds:
                        type: integer
                    required:
                    - initialDelaySeconds
                    - periodSeconds
                    type: object
                  repoConfig:
                    description: 'Optional: Custom package repository configuration
                      for OFED container'
                    properties:
                      name:
                        type: string
                    type: object
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  startupProbe:
                    description: Pod startup probe settings
                    properties:
                      initialDelaySeconds:
                        type: integer
                      periodSeconds:
                        type: integer
                    required:
                    - initialDelaySeconds
                    - periodSeconds
                    type: object
                  terminationGracePeriodSeconds:
                    default: 300
                    description: TerminationGracePeriodSeconds specifies the length
                      of time in seconds to wait before killing the OFED pod on termination
                    format: int64
                    minimum: 0
                    type: integer
                  upgradePolicy:
                    description: Ofed auto-upgrade settings
                    properties:
                      autoUpgrade:
                        default: false
                        description: AutoUpgrade is a global switch for automatic
                          upgrade feature if set to false all other options are ignored
                        type: boolean
                      drain:
                        description: DrainSpec describes configuration for node drain
                          during automatic upgrade
                        properties:
                          deleteEmptyDir:
                            default: false
                            description: DeleteEmptyDir indicates if should continue
                              even if there are pods using emptyDir (local data that
                              will be deleted when the node is drained)
                            type: boolean
                          enable:
                            default: true
                            description: Enable indicates if node draining is allowed
                              during upgrade
                            type: boolean
                          force:
                            default: false
                            description: Force indicates if force draining is allowed
                            type: boolean
                          podSelector:
                            description: 'PodSelector specifies a label selector to
                              filter pods on the node that need to be drained For
                              more details on label selectors, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                            type: string
                          timeoutSeconds:
                            default: 300
                            description: TimeoutSecond specifies the length of time
                              in seconds to wait before giving up drain, zero means
                              infinite
                            minimum: 0
                            type: integer
                        type: object
                      maxParallelUpgrades:
                        default: 1
                        description: MaxParallelUpgrades indicates how many nodes
                          can be upgraded in parallel 0 means no limit, all nodes
                          will be upgraded in parallel
                        minimum: 0
                        type: integer
                      waitForCompletion:
                        description: WaitForCompletionSpec describes the configuration
                          for waiting on job completions
                        properties:
                          podSelector:
                            description: 'PodSelector specifies a label selector for
                              the pods to wait for completion For more details on
                              label selectors, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: TimeoutSecond specifies the length of time
                              in seconds to wait before giving up on pod termination,
                              zero means infinite
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              psp:
                description: PSPSpec describes configuration for PodSecurityPolicies
                  to apply for all Pods
                properties:
                  enabled:
                    default: false
                    description: Enabled indicates if PodSecurityPolicies needs to
                      be enabled for all Pods
                    type: boolean
                type: object
              rdmaSharedDevicePlugin:
                description: DevicePluginSpec describes configuration options for
                  device plugin 1. Image information for device plugin 2. Device plugin
                  configuration
                properties:
                  config:
                    type: string
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  useCdi:
                    type: boolean
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              secondaryNetwork:
                description: SecondaryNetwork describes configuration options for
                  secondary network
                properties:
                  cniPlugins:
                    description: Image information for CNI plugins
                    properties:
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                  ipamPlugin:
                    description: Image information for IPAM plugin
                    properties:
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                  ipoib:
                    description: Image information for IPoIB CNI
                    properties:
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                  multus:
                    description: Image and configuration information for multus
                    properties:
                      config:
                        type: string
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                type: object
              sriovDevicePlugin:
                description: DevicePluginSpec describes configuration options for
                  device plugin 1. Image information for device plugin 2. Device plugin
                  configuration
                properties:
                  config:
                    type: string
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  useCdi:
                    type: boolean
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              tolerations:
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: NicClusterPolicyStatus defines the observed state of NicClusterPolicy
            properties:
              appliedStates:
                description: AppliedStates provide a finer view of the observed state
                items:
                  description: AppliedState defines a finer-grained view of the observed
                    state of NicClusterPolicy
                  properties:
                    name:
                      type: string
                    state:
                      description: Represents reconcile state of the system
                      enum:
                      - ready
                      - notReady
                      - ignore
                      - error
                      type: string
                  required:
                  - name
                  - state
                  type: object
                type: array
              reason:
                description: Informative string in case the observed state is error
                type: string
              state:
                description: Reflects the current state of the cluster policy
                enum:
                - ignore
                - notReady
                - ready
                - error
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
