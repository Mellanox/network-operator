# Copyright 2020 NVIDIA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for network-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nfd:
  # -- Deploy Node Feature Discovery operator.
  enabled: true
  # -- Deploy Node Feature Rules to label the nodes with the discovered features.
  deployNodeFeatureRules: true

# -- Enable CRDs upgrade with helm pre-install and pre-upgrade hooks.
upgradeCRDs: true

sriovNetworkOperator:
  # -- Deploy SR-IOV Network Operator.
  enabled: false

# Set both enableNodeFeatureApi and NodeFeatureAPI feature gate to false to disable.
node-feature-discovery:
  # -- The Node Feature API enable communication between nfd master and worker
  # through NodeFeature CRs. Otherwise communication is through gRPC.
  enableNodeFeatureApi: true
  featureGates:
    NodeFeatureAPI: true

  # -- NFD master deployment configuration.
  master:
    serviceAccount:
      name: node-feature-discovery
      create: true
    config:
      extraLabelNs: ["nvidia.com"]
  gc:
    # -- Specifies whether the NFD Garbage Collector should be created
    enable: true
    # -- Specifies the number of replicas for the NFD Garbage Collector
    replicaCount: 1
    serviceAccount:
      # -- The name of the service account for garbage collector to use.
      # If not set and create is true, a name is generated using the fullname
      # template and -gc suffix.
      name: node-feature-discovery
      # -- disable creation to avoid duplicate serviceaccount creation by master
      # spec above.
      create: false
  # -- NFD worker daemonset configuration.
  worker:
    serviceAccount:
      # disable creation to avoid duplicate serviceaccount creation by master spec
      # above
      name: node-feature-discovery
      create: false
    tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: nvidia.com/gpu
      operator: Exists
      effect: NoSchedule
    config:
      sources:
        pci:
          deviceClassWhitelist:
          - "0300"
          - "0302"
          deviceLabelFields:
          - vendor

# SR-IOV Network Operator chart related values.
sriov-network-operator:
  operator:
    # -- Prefix to be used for resources names.
    resourcePrefix: "nvidia.com"
    # -- Enable admission controller.
    admissionControllers:
      enabled: false
      certificates:
        secretNames:
          operator: "operator-webhook-cert"
          injector: "network-resources-injector-cert"
        certManager:
          # -- When enabled, makes use of certificates managed by cert-manager.
          enabled: true
          # -- When enabled, certificates are generated via cert-manager and then
          # name will match the name of the secrets defined above.
          generateSelfSigned: true
        # -- If not specified, no secret is created and secrets with the names
        # defined above are expected to exist in the cluster. In that case,
        # the ca.crt must be base64 encoded twice since it ends up being an env variable.
        custom:
          enabled: false
      #   operator:
      #     caCrt: |
      #       -----BEGIN CERTIFICATE-----
      #       MIIMIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G
      #       ...
      #       -----END CERTIFICATE-----
      #     tlsCrt: |
      #       -----BEGIN CERTIFICATE-----
      #       MIIMIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G
      #       ...
      #       -----END CERTIFICATE-----
      #     tlsKey: |
      #       -----BEGIN EC PRIVATE KEY-----
      #       MHcl4wOuDwKQa+upc8GftXE2C//4mKANBC6It01gUaTIpo=
      #       ...
      #      -----END EC PRIVATE KEY-----
      #   injector:
      #     caCrt: |
      #       -----BEGIN CERTIFICATE-----
      #       MIIMIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G
      #       ...
      #       -----END CERTIFICATE-----
      #     tlsCrt: |
      #       -----BEGIN CERTIFICATE-----
      #       MIIMIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G
      #       ...
      #       -----END CERTIFICATE-----
      #     tlsKey: |
      #       -----BEGIN EC PRIVATE KEY-----
      #       MHcl4wOuDwKQa+upc8GftXE2C//4mKANBC6It01gUaTIpo=
      #       ...
      #      -----END EC PRIVATE KEY-----

  # Image URIs for sriov-network-operator components.
  images:
    operator: {{ .SriovNetworkOperator.Repository }}/{{ .SriovNetworkOperator.Image }}:{{ .SriovNetworkOperator.Version }}
    sriovConfigDaemon: {{ .SriovConfigDaemon.Repository }}/{{ .SriovConfigDaemon.Image }}:{{ .SriovConfigDaemon.Version }}
    sriovCni: {{ .SriovCni.Repository }}/{{ .SriovCni.Image }}:{{ .SriovCni.Version }}
    ibSriovCni: {{ .SriovIbCni.Repository }}/{{ .SriovIbCni.Image }}:{{ .SriovIbCni.Version }}
    ovsCni: {{ .OVSCni.Repository }}/{{ .OVSCni.Image }}:{{ .OVSCni.Version }}
    # rdmaCni: {{ .RDMACni.Repository }}/{{ .RDMACni.Image }}:{{ .RDMACni.Version }}
    sriovDevicePlugin: {{ .SriovDevicePlugin.Repository }}/{{ .SriovDevicePlugin.Image }}:{{ .SriovDevicePlugin.Version }}
    resourcesInjector: ghcr.io/k8snetworkplumbingwg/network-resources-injector:8810e6a127366cc1eb829d3f7cb3f866d096946e
    webhook: {{ .SriovNetworkOperatorWebhook.Repository }}/{{ .SriovNetworkOperatorWebhook.Image }}:{{ .SriovNetworkOperatorWebhook.Version }}
  # imagePullSecrest for SR-IOV Network Operator related images
  # imagePullSecrets: []
  sriovOperatorConfig:
    # -- Deploy ``SriovOperatorConfig`` custom resource
    deploy: true
    # -- Selects the nodes to be configured
    configDaemonNodeSelector:
      beta.kubernetes.io/os: "linux"
      network.nvidia.com/operator.mofed.wait: "false"

# General Operator related values
# The operator element allows to deploy network operator from an alternate location
operator:
  # -- Optional `resource requests and limits <https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/>`_
  # for the operator.
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi
  # -- Set additional tolerations for various Daemonsets deployed by the operator.
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Equal"
      value: ""
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Equal"
      value: ""
      effect: "NoSchedule"
  # -- Configure node selector settings for the operator.
  nodeSelector: {}
  affinity:
    # -- Configure node affinity settings for the operator.
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: In
                values: [""]
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: In
                values: [ "" ]
  # -- Network Operator image repository.
  repository: {{ .NetworkOperator.Repository }}
  # -- Network Operator image name
  image: network-operator
  # imagePullSecrets: []
  # -- Name to be used as part of objects name generation.
  nameOverride: ""
  # -- Name to be used to replace generated names.
  fullnameOverride: ""
  # tag, if defined will use the given image tag, else Chart. AppVersion will be used.
  # tag
  # -- Directory, where CNI binaries will be deployed on the nodes. Setting for 
  # the sriov-network-operator is set with ``sriov-network-operator.cniBinPath``
  # parameter. Note that the CNI bin directory should be aligned with the CNI bin
  # directory in the container runtime.
  cniBinDirectory: /opt/cni/bin
  # -- Enable the use of Driver ToolKit to compile OFED drivers (OpenShift only).
  useDTK: true
  admissionController:
    # -- Deploy with admission controller.
    enabled: false
    # -- Use cert-manager for generating self-signed certificate.
    useCertManager: true
    # certificate:
      # tlsCrt: |
      #   -----BEGIN CERTIFICATE-----
      #   MIIMIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G
      #   ...
      #   -----END CERTIFICATE-----
      # tlsKey: |
      #   -----BEGIN EC PRIVATE KEY-----
      #   MHcl4wOuDwKQa+upc8GftXE2C//4mKANBC6It01gUaTIpo=
      #   ...
      #  -----END EC PRIVATE KEY-----

# -- An optional list of references to secrets to use for pulling any of the
# Network Operator images.
imagePullSecrets: []

# NicClusterPolicy CR values:
# -- Deploy ``NicClusterPolicy`` custom resource according to the provided parameters.
deployCR: false
ofedDriver:
  # -- Deploy the  NVIDIA DOCA Driver driver container.
  deploy: false
  # -- NVIDIA DOCA Driver image name.
  image: {{ .Mofed.Image }}
  # -- NVIDIA DOCA Driver image repository.
  repository: {{ .Mofed.Repository }}
  # -- NVIDIA DOCA Driver version.
  version: {{ .Mofed.Version }}
  initContainer:
    # -- Deploy init container.
    enable: true
    # -- Init container image repository.
    repository: {{ .NetworkOperatorInitContainer.Repository }}
    # -- Init container image name.
    image: {{ .NetworkOperatorInitContainer.Image }}
    # -- Init container image version.
    version: {{ .NetworkOperatorInitContainer.Version }}
  # imagePullSecrets: []
  # env, if defined will pass environment variables to the OFED container
  # env:
  #   - name: EXAMPLE_ENV_VAR
  #     value: example_env_var_value
  # containerResources:
  #   - name: "mofed-container"
  #     requests:
  #       cpu: "200m"
  #       memory: "150Mi"
  #     limits:
  #       cpu: "300m"
  #       memory: "300Mi"
  # -- The grace period before the driver containeris forcibly removed.
  terminationGracePeriodSeconds: 300
  # -- Private mirror repository configuration.
  repoConfig:
    name: ""
  # Custom ssl key/certificate configuration.
  certConfig:
    # -- Custom TLS key/certificate configuration configMap name.
    name: ""
  startupProbe:
    # -- NVIDIA DOCA Driver startup probe initial delay.
    initialDelaySeconds: 10
    # -- NVIDIA DOCA Driver startup probe interval.
    periodSeconds: 20
  livenessProbe:
    # -- NVIDIA DOCA Driver liveness probe initial delay.
    initialDelaySeconds: 30
    # -- NVIDIA DOCA Driver liveness probe interval.
    periodSeconds: 30
  readinessProbe:
    # -- NVIDIA DOCA Driver readiness probe initial delay.
    initialDelaySeconds: 10
    # -- NVIDIA DOCA Driver readiness probe interval.
    periodSeconds: 30
  upgradePolicy:
    # -- Global switch for automatic upgrade feature,
    # if set to false all other options are ignored.
    autoUpgrade: true
    # -- Number of nodes that can be upgraded in parallel (default: 1).
    # 0 means no limit, all nodes will be upgraded in parallel.
    maxParallelUpgrades: 1
    # -- Cordon and drain (if enabled) a node before loading the driver on it.
    safeLoad: false
    # -- Options for node drain (`kubectl drain`) before the driver reload.
    # If auto upgrade is enabled but drain.enable is false, then driver POD will be
    # reloaded immediately without removing PODs from the node.
    drain:
      # -- Options for node drain (``kubectl drain``) before driver reload, if
      # auto upgrade is enabled.
      enable: true
      # -- Use force drain of pods.
      force: true
      # -- Pod selector to specify which pods will be drained from the node.
      # An empty selector means all pods.
      podSelector: ""
      # -- It's recommended to set a timeout to avoid infinite drain in case
      # non-fatal error keeps happening on retries.
      timeoutSeconds: 300
      # -- Delete pods local storage.
      deleteEmptyDir: true
    waitForCompletion:
      # specifies a label selector for the pods to wait for completion
      # podSelector: "app=myapp"
      # specify the length of time in seconds to wait before giving up for
      # workload to finish, zero means infinite
      # timeoutSeconds: 300
  # -- Fail Mellanox OFED deployment if precompiled OFED driver container image
  # does not exists.
  forcePrecompiled: false

rdmaSharedDevicePlugin:
  # -- Deploy RDMA shared device plugin.
  deploy: true
  # -- RDMA shared device plugin image name.
  image: {{ .RdmaSharedDevicePlugin.Image }}
  # -- RDMA shared device plugin image repository.
  repository: {{ .RdmaSharedDevicePlugin.Repository }}
  # -- RDMA shared device plugin version.
  version: {{ .RdmaSharedDevicePlugin.Version }}
  # -- Enable Container Device Interface (CDI) mode.
  # **NOTE**: NVIDIA Network Operator does not configure container runtime to
  # enable CDI.
  useCdi: false
  # imagePullSecrets: []
  # containerResources:
  #   - name: "rdma-shared-dp"
  #     requests:
  #       cpu: "100m"
  #       memory: "50Mi"
  #     limits:
  #       cpu: "150m"
  #       memory: "100Mi"
  # -- The following defines the RDMA resources in the cluster.
  # It must be provided by the user when deploying the chart.
  # Each entry in the resources element will create a resource with the provided
  # <name> and list of devices.
  resources:
    - name: rdma_shared_device_a
      vendors: [15b3]
      rdmaHcaMax: 63

sriovDevicePlugin:
  # -- Deploy SR-IOV Network device plugin.
  deploy: false
  # -- SR-IOV Network device plugin image name.
  image: {{ .SriovDevicePlugin.Image }}
  # -- SR-IOV Network device plugin image repository.
  repository: {{ .SriovDevicePlugin.Repository }}
  # -- SR-IOV Network device plugin version
  version: {{ .SriovDevicePlugin.Version }}
  # -- Enable Container Device Interface (CDI) mode.
  # **NOTE**: NVIDIA Network Operator does not configure container runtime to
  # enable CD.
  useCdi: false
  # imagePullSecrets: []
  # containerResources:
  #   - name: "kube-sriovdp"
  #     requests:
  #       cpu: "100m"
  #       memory: "50Mi"
  #     limits:
  #       cpu: "150m"
  #       memory: "100Mi"
  # Each entry in the resources elements will be an entry in a ``resourceList``
  # created as part of the ``kube-sriovdp`` container configuration.
  resources:
    - name: hostdev
      vendors: [15b3]

ibKubernetes:
  # -- Deploy IB Kubernetes.
  deploy: false
  # -- IB Kubernetes image name.
  image: {{ .IbKubernetes.Image }}
  # -- IB Kubernetes image repository.
  repository: {{ .IbKubernetes.Repository }}
  # -- IB Kubernetes version.
  version: {{ .IbKubernetes.Version }}
  # imagePullSecrets: []
  # containerResources:
  #   - name: "ib-kubernetes"
  #     requests:
  #       cpu: "100m"
  #       memory: "300Mi"
  #     limits:
  #       cpu: "100m"
  #       memory: "300Mi"
  # -- Interval of periodic update in seconds.
  periodicUpdateSeconds: 5
  # -- Minimal available GUID value to be allocated for the pod.
  pKeyGUIDPoolRangeStart: "02:00:00:00:00:00:00:00"
  # -- Maximal available GUID value to be allocated for the pod.
  pKeyGUIDPoolRangeEnd: "02:FF:FF:FF:FF:FF:FF:FF"
  # -- Name of the Secret with the NVIDIA UFM access credentials, deployed in advance.
  ufmSecret: '' # specify the secret name here

nvIpam:
  # -- Deploy NVIDIA IPAM Plugin.
  deploy: true
  # -- NVIDIA IPAM Plugin image name.
  image: {{ .NvIPAM.Image }}
  # -- NVIDIA IPAM Plugin image repository.
  repository: {{ .NvIPAM.Repository }}
  # -- NVIDIA IPAM Plugin image version.
  version: {{ .NvIPAM.Version }}
  # -- Enable deployment of the validataion webhook for IPPool CRD.
  enableWebhook: false
  # imagePullSecrets: []
  # containerResources:
  #   - name: "nv-ipam-node"
  #     requests:
  #       cpu: "150m"
  #       memory: "50Mi"
  #     limits:
  #       cpu: "300m"
  #       memory: "300Mi"
  #   - name: "nv-ipam-controller"
  #     requests:
  #       cpu: "150m"
  #       memory: "50Mi"
  #     limits:
  #       cpu: "300m"
  #       memory: "300Mi"

secondaryNetwork:
  # -- Deploy Secondary Network.
  deploy: true
  cniPlugins:
    # -- Deploy CNI Plugins Secondary Network.
    deploy: true
    # -- CNI Plugins image name.
    image: {{ .CniPlugins.Image }}
    # -- CNI Plugins image repository.
    repository: {{ .CniPlugins.Repository }}
    # -- CNI Plugins image version.
    version: {{ .CniPlugins.Version }}
    # imagePullSecrets: []
    # containerResources:
    #   - name: "cni-plugins"
    #     requests:
    #       cpu: "100m"
    #       memory: "50Mi"
    #     limits:
    #       cpu: "100m"
    #       memory: "50Mi"
  multus:
    # -- Deploy Multus Secondary Network.
    deploy: true
    # -- Multus image name.
    image: {{ .Multus.Image }}
    # -- Multus image repository.
    repository: {{ .Multus.Repository }}
    # -- Multus image version.
    version: {{ .Multus.Version }}
    # imagePullSecrets: []
    # config: ''
    # containerResources:
    #   - name: "kube-multus"
    #     requests:
    #       cpu: "100m"
    #       memory: "50Mi"
    #     limits:
    #       cpu: "100m"
    #       memory: "50Mi"
  ipoib:
    # -- Deploy IPoIB CNI.
    deploy: false
    # -- IPoIB CNI image name.
    image: {{ .Ipoib.Image }}
    # -- IPoIB CNI image repository.
    repository: {{ .Ipoib.Repository }}
    # -- IPoIB CNI image version.
    version: {{ .Ipoib.Version }}
    # imagePullSecrets: []
    # containerResources:
    #   - name: "ipoib-cni"
    #     requests:
    #       cpu: "100m"
    #       memory: "50Mi"
    #     limits:
    #       cpu: "100m"
    #       memory: "50Mi"
  ipamPlugin:
    # -- Deploy IPAM CNI Plugin Secondary Network.
    deploy: false
    # -- IPAM CNI Plugin image name.
    image: {{ .IpamPlugin.Image }}
    # -- IPAM CNI Plugin image repository.
    repository: {{ .IpamPlugin.Repository }}
    # -- IPAM CNI Plugin image version.
    version: {{ .IpamPlugin.Version }}
    # imagePullSecrets: []
    # containerResources:
    #   - name: "whereabouts"
    #     requests:
    #       cpu: "100m"
    #       memory: "100Mi"
    #     limits:
    #       cpu: "100m"
    #       memory: "200Mi"

nicFeatureDiscovery:
  # -- Deploy NVIDIA NIC Feature Discovery.
  deploy: false
  # -- NVIDIA NIC Feature Discovery image name.
  image: {{ .NicFeatureDiscovery.Image }}
  # -- NVIDIA NIC Feature Discovery repository.
  repository: {{ .NicFeatureDiscovery.Repository }}
  # -- NVIDIA NIC Feature Discovery image version.
  version: {{ .NicFeatureDiscovery.Version }}
  # imagePullSecrets: []
  # containerResources:
  #   - name: "nic-feature-discovery"
  #     requests:
  #       cpu: "100m"
  #       memory: "50Mi"
  #     limits:
  #       cpu: "300m"
  #       memory: "150Mi"

docaTelemetryService:
  # -- Deploy DOCA Telemetry Service.
  deploy: false
  # -- DOCA Telemetry Service image name.
  image: {{ .DOCATelemetryService.Image }}
  # -- DOCA Telemetry Service image repository.
  repository: {{ .DOCATelemetryService.Repository }}
  # -- DOCA Telemetry Service image version.
  version: {{ .DOCATelemetryService.Version }}
  # imagePullSecrets: []
  # containerResources:
  #   - name: "doca-telemetry-service"
  #     requests:
  #       cpu: "100m"
  #       memory: "50Mi"
  #     limits:
  #       cpu: "300m"
  #       memory: "150Mi"

# Can be set to nicclusterpolicy and override other ds node affinity,
# e.g. https://github.com/Mellanox/network-operator/blob/master/manifests/state-multus-cni/0050-multus-ds.yml#L26-L36
#nodeAffinity:

# Can be set to nicclusterpolicy to add extra tolerations to ds
#tolerations:

# @ignore
test:
  pf: ens2f0
